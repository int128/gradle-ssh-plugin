task('should execute the shell') {
    doLast {
        ssh.run {
            session(remotes.testServer) {
                shell(interaction: {
                    when(line: _, from: standardOutput) {
                        standardInput << 'uname -a' << '\n'
                        standardInput << 'exit 0' << '\n'
                    }
                })
            }
        }
    }
}

task('should write output of the shell to the file') {
    doLast {
        def x = randomInt()
        def y = randomInt()
        localWorkDir.mkdirs()
        def resultFile = file("$localWorkDir/result")
        resultFile.withOutputStream { stream ->
            ssh.run {
                session(remotes.testServer) {
                    execute "expr $x + $y", outputStream: stream
                }
            }
        }
        assert resultFile.text as int == (x + y)
    }
}

task('should write output of the shell to the standard output') {
    doLast {
        ssh.run {
            session(remotes.testServer) {
                shell outputStream: System.out, interaction: {
                    when(line: _, from: standardOutput) {
                        standardInput << 'uname -a' << '\n'
                        standardInput << 'exit 0' << '\n'
                    }
                }
            }
        }
    }
}
